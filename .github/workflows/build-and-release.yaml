name: Build for release

on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:

jobs:
  get-newest-supported-ghc:
    name: Get the newest supported GHC
    outputs:
      matrix: ${{ steps.get-latest-version.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract the tested GHC versions
        id: get-latest-version
        uses: webdevred/get-tested@4671a0284723f30fa7f97989ff1f9513167180fe
        with:
          cabal-file: jbeam-edit.cabal
          windows-version: latest
          version: get-tested-for-jbeam-edit
          newest: true
  build-for-release:
    runs-on: windows-latest
    needs: get-newest-supported-ghc
    name: Build for release for ${{ matrix.ghc }}
    strategy:
      matrix: ${{ fromJSON(needs.get-newest-supported-ghc.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up GHC latest and Cabal
        id: setup-ghc
        uses: haskell-actions/setup@v2.8.1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: latest
          cabal-update: true
      - name: Enable optimization for building on tags
        if: startsWith(github.ref, 'refs/tags/')
        run: cabal configure --project-file cabal.project.release -O2
      - name: Enable tests for non-tags
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: cabal configure --project-file cabal.project.release --enable-tests
      - name: Cache GHC, Cabal store, and build artifacts
        uses: actions/cache@v4.2.4
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          path: |
            dist-newstyle
            ${{ steps.setup-ghc.outputs.cabal-store }}
          key: >-
            ${{ runner.os }}-cabal-${{
              matrix.ghc
            }}-${{
              hashFiles('**/package.yaml')
            }}
          restore-keys: |
            ${{ runner.os }}-cabal-${{ matrix.ghc }}-
      - name: Build executables
        run: cabal build exe:jbeam-edit --project-file cabal.project.release
      - name: Run tests (GHC ${{ matrix.ghc }})
        run: cabal test --project-file cabal.project.release
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: jbeam-edit-${{ matrix.ghc }}
          path: dist-newstyle
  release:
    runs-on: windows-latest
    needs: [build-for-release, get-newest-supported-ghc]
    if: startsWith(github.ref, 'refs/tags/')
    name: Release for Windows
    strategy:
      matrix: ${{ fromJSON(needs.get-newest-supported-ghc.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: jbeam-edit-${{ matrix.ghc }}
          path: dist-newstyle
      - name: Prepare release folder
        run: |
          $releaseDir = "$env:GITHUB_WORKSPACE\dist\release"
          Remove-Item $releaseDir -Recurse -Force -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path $releaseDir | Out-Null
          $exePath = Get-ChildItem -Path "$env:GITHUB_WORKSPACE\dist-newstyle\build" -Recurse -Filter "jbeam-edit.exe" | Select-Object -First 1
          if ($exePath) {
            Copy-Item $exePath.FullName $releaseDir
          }
          $dataDir = "$releaseDir\examples\jbfl"
          New-Item -ItemType Directory -Path $dataDir -Force | Out-Null
          Copy-Item "examples\jbfl\*" $dataDir -Recurse -ErrorAction SilentlyContinue
          Copy-Item README.md $releaseDir
          Copy-Item JBFL_DOCS.md $releaseDir
          Copy-Item LICENSE $releaseDir
      - name: Zip release
        run: |
          $zipFile = "$env:GITHUB_WORKSPACE\dist\jbeam-edit-${env:GITHUB_REF_NAME}.zip"
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::CreateFromDirectory("$env:GITHUB_WORKSPACE\dist\release", $zipFile)
      - name: Build Inno Setup Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: installer/setup.iss
          options: /O+
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |-
            dist/jbeam-edit-${{ github.ref_name }}.zip
            dist/release/setup.exe
