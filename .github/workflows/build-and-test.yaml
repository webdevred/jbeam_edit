name: Build and test

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build-with-stack:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runner: ubuntu-latest
            stack-paths: |
              ~/.stack
              ~/.ghc
          - os: windows-latest
            runner: windows-latest
            stack-paths: |
              ~\AppData\Roaming\stack
              ~\AppData\Local\Programs\stack\x86_64-windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Extract resolver
        id: extract
        shell: bash
        run: |
          RESOLVER=$(grep -E '^(snapshot|resolver):' stack.yaml | awk '{ print $2 }')
          echo "resolver=$RESOLVER" >> $GITHUB_OUTPUT
      - name: Cache global Stack dependencies
        uses: actions/cache@v4.2.3
        with:
          path: ${{ matrix.stack-paths }}
          key: >-
            stack-global-${{ matrix.os }}-${{
              steps.extract.outputs.resolver
            }}-${{
              hashFiles('stack.yaml.lock')
            }}
          restore-keys: |
            stack-global-${{ matrix.os }}-${{ steps.extract.outputs.resolver }}-
            stack-global-${{ matrix.os }}-
      - name: Cache .stack-work build artifacts
        uses: actions/cache@v4.2.3
        with:
          path: .stack-work
          key: >-
            stack-local-${{ matrix.os }}-${{
              steps.extract.outputs.resolver
            }}-${{
              hashFiles('**/stack.yaml.lock', '**/package.yaml')
            }}
          restore-keys: |
            stack-local-${{ matrix.os }}-${{ steps.extract.outputs.resolver }}-
            stack-local-${{ matrix.os }}-
      - name: Set up GHC with Stack
        run: stack setup
      - name: Build project
        run: >-
          stack build --fast --hpack-force --lock-file=error-on-write
          --ghc-options="-Werror"
      - name: Check that .cabal file has not changed except hpack comment
        shell: bash
        run: bash .github/scripts/check-cabal-file.sh
      - name: Run tests
        run: stack test --fast
  generate-matrix:
    name: "Generate matrix from cabal"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract the tested GHC versions
        id: set-matrix
        uses: kleidukos/get-tested@v0.1.7.1
        with:
          cabal-file: jbeam-edit.cabal
          ubuntu-version: "latest"
          version: 0.1.7.1
  build-with-cabal:
    name: Build and test with Cabal (GHC ${{ matrix.ghc }})
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Set up GHC ${{ matrix.ghc }} and Cabal
        id: setup-ghc
        uses: haskell-actions/setup@v2.8.0
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: latest
          cabal-update: false
      - name: Log GHC and Cabal outputs
        run: |
          echo "GHC Version: ${{ steps.setup-ghc.outputs.ghc-version }}"
          echo "Cabal Store Path: ${{ steps.setup-ghc.outputs.cabal-store }}"
      - name: Cache Cabal store and build artifacts
        uses: actions/cache@v4.2.3
        with:
          path: |
            ${{ steps.setup-ghc.outputs.cabal-store }}
            ~/.cabal/packages
            dist-newstyle
          key: >-
            ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('**/package.yaml')
            }}
          restore-keys: |
            ${{ runner.os }}-cabal-${{ matrix.ghc }}-
      - name: Update Cabal package index
        run: cabal update
      - name: Build project (GHC ${{ steps.setup-ghc.outputs.ghc-version }})
        run: cabal build --project-file cabal.project.ci all
      - name: Run tests (GHC ${{ steps.setup-ghc.outputs.ghc-version }})
        run: cabal test --project-file cabal.project.ci
